{"version":3,"sources":["types/actions.ts","components/Clock.tsx","assets/plug.svg","assets/computer.svg","assets/console.svg","components/Toolbar.tsx","assets/duck.svg","assets/cursor.svg","assets/folder.svg","assets/computer-shiny.svg","assets/github.svg","contexts/AppContext.tsx","types/appconstants.ts","components/Computer.tsx","components/Monitor.tsx","components/Console.tsx","assets/profile.jpg","components/CvApp.tsx","components/AppLauncher.tsx","index.tsx"],"names":["AppActions","Time","styled","div","Clock","useState","Date","date","setDate","useEffect","watchTimer","setInterval","clearInterval","toLocaleTimeString","hour","minute","second","hour12","toUpperCase","Toolbar","props","height","Left","Right","AppBar","SmallImage","img","DesktopToolbar","src","computer","console","plug","Actions","processInfo","type","Close","payload","Open","AppContext","createContext","AppContextProvider","children","useReducer","state","action","newState","running","appId","Error","open","dispatch","Provider","value","isOpen","undefined","CvAppMain","name","OperatingSystem","Desktop","cursor","Wallpaper","LogoText","p","Logo","IconImage","IconText","Grid","columns","rows","Link","a","row","column","RotatingImage","Icon","iconText","iconImage","link","href","onClick","target","rel","SystemLogo","duck","title","alt","Computer","dimensions","useContext","folder","github","Frame","color","frameOutline","Pillar","Surface","Screen","borderColor","MonitorContainer","Stand","frameColor","Monitor","WindowContainer","WindowHeader","MainContainer","width","HeaderButton","HeaderTitle","HeaderText","Circle","ConsoleHeader","appInfo","className","onMouseDown","Console","bounds","handle","ColoredSpan","span","ConsoleLine","ScrollSpan","charCount","FlexContainer","direction","ContentsContainer","NavigationContainer","ConsoleText","message","length","CvApp","navigationLinks","linkConfig","links","id","map","item","text","profile","AppLauncher","apps","app","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebdc6527.chunk.js","sourcesContent":["import { ProcessInfo } from \"./types\"\r\n\r\nexport type Action<T> = {\r\n    type: string;\r\n    payload: T\r\n}\r\n\r\nexport enum AppActions {\r\n    Open = 'OpenApp',\r\n    Close = 'CloseApp'\r\n}\r\n\r\nexport const Actions = {\r\n    Close: (processInfo: ProcessInfo): Action<ProcessInfo> => ({\r\n        type: AppActions.Close,\r\n        payload: processInfo\r\n    }),\r\n    Open: (processInfo: ProcessInfo): Action<ProcessInfo> => ({\r\n        type: AppActions.Open,\r\n        payload: processInfo\r\n    })\r\n}","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Time = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 19pt;\r\n    padding: 0 1rem 0 1rem;\r\n`;\r\n\r\nconst Clock: React.FC = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const watchTimer = setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000)\r\n        return () => clearInterval(watchTimer);\r\n    }, [])\r\n\r\n    return <Time>\r\n        {date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true }).toUpperCase()}\r\n    </Time >\r\n}\r\n\r\nexport default Clock;","export default __webpack_public_path__ + \"static/media/plug.ccebd3d4.svg\";","export default __webpack_public_path__ + \"static/media/computer.d8a6fb63.svg\";","export default __webpack_public_path__ + \"static/media/console.d7e6d62d.svg\";","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport Clock from './Clock';\r\nimport plug from '../assets/plug.svg'\r\nimport computer from '../assets/computer.svg';\r\nimport console from '../assets/console.svg';\r\n\r\nconst Toolbar = styled.div<{ height: string }>`\r\n    display: flex;\r\n    flex-direction: row;\r\n    height: ${props => props.height};\r\n    width: 100%;\r\n    background-color: #F5F0F0;\r\n    box-shadow: inset 0 0 3px #111010b0;\r\n`;\r\n\r\nconst Left = styled.div`\r\n    display: flex;\r\n    width: 50%;\r\n`;\r\n\r\nconst Right = styled.div`\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    width: 50%;\r\n`;\r\n\r\nconst AppBar = styled.div`\r\n    width: 14em;\r\n    box-shadow: 0px 2px 5px 0px #aaa8a8 inset;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 0.5em 0 0.5em;\r\n`;\r\n\r\nconst SmallImage = styled.img`\r\n    width: 34px;\r\n    height: 100%;\r\n    padding: 0 0.5rem 0 0.5rem;\r\n`;\r\n\r\nconst DesktopToolbar: React.FC<{ height: string }> = ({ height }) => {\r\n\r\n    return <Toolbar height={height}>\r\n        <Left>\r\n            <SmallImage src={computer} />\r\n            <AppBar>\r\n                <SmallImage src={console} />\r\n                <p>CvApp - Zygimantas ...</p>\r\n            </AppBar>\r\n        </Left>\r\n        <Right>\r\n            <SmallImage src={plug} />\r\n            <Clock />\r\n        </Right>\r\n    </Toolbar>\r\n}\r\n\r\nexport default DesktopToolbar;","export default __webpack_public_path__ + \"static/media/duck.e4fa0349.svg\";","export default __webpack_public_path__ + \"static/media/cursor.25fe7b37.svg\";","export default __webpack_public_path__ + \"static/media/folder.9d5e3359.svg\";","export default __webpack_public_path__ + \"static/media/computer-shiny.5aa929f3.svg\";","export default __webpack_public_path__ + \"static/media/github.04be58c1.svg\";","import React, { createContext, useReducer } from \"react\";\r\nimport { Action, AppActions } from \"../types/actions\";\r\nimport { Dictionary, IAppContext, IAppState } from \"../types/interfaces\";\r\nimport { ProcessInfo } from \"../types/types\";\r\n\r\nexport const AppContext = createContext<IAppContext>({} as IAppContext);\r\n\r\nconst useAppReducer = () => {\r\n    const init = (open: Dictionary<ProcessInfo>): IAppState => ({ running: open });\r\n    const reducer = (state: IAppState, action: Action<ProcessInfo>) => {\r\n        const newState: IAppState = { running: { ...state.running } }\r\n        switch (action.type) {\r\n            case AppActions.Open:\r\n                newState.running[action.payload.appId] = action.payload;\r\n                break;\r\n            case AppActions.Close:\r\n                delete newState.running[action.payload.appId];\r\n                break;\r\n            default:\r\n                throw new Error();\r\n        }\r\n\r\n        return newState;\r\n    }\r\n    return useReducer(reducer, {} as Dictionary<ProcessInfo>, init);\r\n}\r\n\r\nexport const AppContextProvider: React.FC = ({ children }) => {\r\n    const [state, dispatch] = useAppReducer();\r\n\r\n    return <AppContext.Provider value={{\r\n        isOpen: (appId: string) => state.running[appId] !== undefined,\r\n        state,\r\n        dispatch,\r\n    }}>\r\n        {children}\r\n    </AppContext.Provider>\r\n}","import { ProcessInfo } from \"./types\";\r\n\r\nexport const CvAppMain: ProcessInfo = { appId: \"cvApp\", name: \"CvApp - Zygimantas Raugas\" }","import styled from 'styled-components';\r\nimport React, { useContext } from 'react';\r\n\r\n/** Third party imports above**/\r\nimport DesktopToolbar from './Toolbar';\r\nimport duck from '../assets/duck.svg';\r\nimport cursor from '../assets/cursor.svg';\r\nimport folder from '../assets/folder.svg';\r\nimport computer from '../assets/computer-shiny.svg';\r\nimport github from '../assets/github.svg';\r\nimport console from '../assets/console.svg';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport { Actions } from '../types/actions';\r\nimport { CvAppMain } from '../types/appconstants';\r\n\r\nconst OperatingSystem = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    width: 1280px;\r\n    height: 720px;\r\n`;\r\n\r\nconst Desktop = styled.div`\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #111010;\r\n    cursor: url(${cursor}) , auto;\r\n`;\r\n\r\nconst Wallpaper = styled.div<{ height: string }>`\r\n    display: flex;\r\n    position: relative;\r\n    height: ${props => props.height};\r\n    width: 100%;\r\n`;\r\n\r\nconst LogoText = styled.p`\r\n    align-self: flex-end;\r\n    color: #8D8080;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    font-size: 22pt;\r\n    display: flex;\r\n    position: absolute;\r\n    bottom: 0;\r\n    padding-bottom: 2%;\r\n    padding-left: 0%;\r\n`;\r\n\r\nconst IconImage = styled.img`\r\n    width: 70%;\r\n    height: 70%;\r\n`;\r\n\r\nconst IconText = styled.p`\r\n    color: white;\r\n    margin: 0;\r\n`;\r\n\r\nconst Grid = styled.div<{ rows: number, columns: number }>`\r\n    position: absolute;\r\n    display: grid;\r\n    width: 99%;\r\n    height: 99%;\r\n    grid-template-columns: repeat(${props => props.columns}, ${props => (99 - (props.columns * 2)) / props.columns}%);\r\n    grid-template-rows: repeat(${props => props.rows}, ${props => (99 - (props.rows * 2)) / props.rows}%);\r\n    grid-auto-flow: column;\r\n    grid-row-gap: 2%;\r\n    grid-column-gap: 2%;\r\n    padding-top: 1%;\r\n    padding-left: 1%;\r\n`;\r\n\r\nconst Link = styled.a <{ row?: number, column?: number }> `\r\n    width: 100%;\r\n    ${props => props.row ? `grid-row: ${props.row};` : ''}\r\n    ${props => props.column ? `grid-column: ${props.column};` : ''}\r\n    padding: 2%;\r\n    text-align: center;\r\n`;\r\n\r\nconst RotatingImage = styled.img`\r\n    animation: flip 10s steps(360) infinite;\r\n    @keyframes flip {\r\n        from {\r\n            transform: rotate3d(0, 1, 0, 0deg);\r\n        }\r\n        to {\r\n            transform: rotate3d(0, 1, 0, -360deg);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Icon: React.FC<{ iconText: string, iconImage: string, link?: string, action?: () => void, column?: number, row?: number }> = ({ iconText, iconImage, row, column, link, action }) => {\r\n    return <Link href={link} onClick={action} target='_blank' rel='noreferrer' row={row} column={column}>\r\n        <IconImage src={iconImage} />\r\n        <IconText>{iconText}</IconText>\r\n    </Link>\r\n}\r\n\r\nconst SystemLogo: React.FC = () => {\r\n    return <Logo>\r\n        <RotatingImage src={duck} title='Quack' alt='Mr Duck' />\r\n        <LogoText>QUACKOS 0.3</LogoText>\r\n    </Logo>\r\n}\r\n\r\nconst Computer: React.FC<{ dimensions: { rows: number, columns: number } }> = ({ children, dimensions }) => {\r\n    const { dispatch } = useContext(AppContext);\r\n\r\n    return (\r\n        <OperatingSystem>\r\n            <Desktop>\r\n                <DesktopToolbar height=\"6%\" />\r\n                <Wallpaper height=\"94%\">\r\n                    <SystemLogo />\r\n                    <Grid rows={dimensions.rows} columns={dimensions.columns}>\r\n                        <Icon iconText=\"Computer\" iconImage={computer} />\r\n                        <Icon iconText=\"Super Secret\" iconImage={folder} />\r\n                        <Icon iconText=\"CV App\" iconImage={console} action={() => dispatch(Actions.Open(CvAppMain))} />\r\n                        {/** Push to the very end of the grid**/}\r\n                        <Icon iconText=\"Source Code\" iconImage={github} link={'https://github.com/igiz/pages/tree/master'} row={dimensions.rows} column={dimensions.columns} />\r\n                    </Grid>\r\n                    {children}\r\n                </Wallpaper>\r\n            </Desktop >\r\n        </OperatingSystem>\r\n    )\r\n}\r\n\r\nexport default Computer;\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Frame = styled.div<{ color: string, frameOutline: string }>`\r\n    align-content: center;\r\n    border-radius: 20px;\r\n    background-color: ${props => props.color};\r\n    border: 20px solid ${props => props.color};\r\n    box-shadow: 3px 4px 3px 3px ${props => props.frameOutline};\r\n    width: 1286px;\r\n    height: 726px;\r\n`;\r\n\r\nconst Pillar = styled.div<{ color: string, frameOutline: string }>`\r\n    height: 80px;\r\n    width: 150px;\r\n    background-color: ${props => props.color};\r\n`;\r\n\r\nconst Surface = styled.div<{ frameOutline: string }>`\r\n    height: 35px;\r\n    width: 800px;\r\n    background-color: ${props => props.color};\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Screen = styled.div<{ borderColor: string }>`\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n    border-radius: 5px;\r\n    border: 3px solid ${props => props.borderColor};\r\n`;\r\n\r\nconst MonitorContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Stand: React.FC<{ frameColor: string, frameOutline: string }> = ({ frameColor, frameOutline }) => {\r\n    return <>\r\n        <Pillar color={frameColor} frameOutline={frameOutline} />\r\n        <Surface color={frameColor} frameOutline={frameOutline} />\r\n    </>\r\n}\r\n\r\nconst Monitor: React.FC = ({ children }) => {\r\n\r\n    const frameOutline = '#000000';\r\n    const frameColor = '#545564';\r\n\r\n    return <MonitorContainer>\r\n        <Frame color={frameColor} frameOutline={frameOutline}>\r\n            <Screen borderColor={frameOutline}>\r\n                {children}\r\n            </Screen>\r\n        </Frame>\r\n        <Stand frameColor={'#000000'} frameOutline={'#ffffff'} />\r\n    </MonitorContainer>\r\n\r\n}\r\n\r\nexport default Monitor;","import React, { useContext } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport { Actions } from \"../types/actions\";\r\nimport { ProcessInfo } from \"../types/types\";\r\n\r\nconst WindowContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-bottom: 0.2rem solid #36ADAD;\r\n    border-left: 0.2rem solid #36ADAD;\r\n    border-right: 0.2rem solid #36ADAD;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #292323;\r\n`;\r\n\r\nconst WindowHeader = styled.div`\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    background-color: #36ADAD;\r\n    min-height: 1.5rem;\r\n    width: 100%;\r\n    padding: 0.2rem;\r\n`;\r\n\r\nconst MainContainer = styled.div<{ height: number | string, width: number | string }>`\r\n    width: ${props => props.width};\r\n    height: ${props => props.height};\r\n    position: relative;\r\n    left: 15%;\r\n    top: 10%;\r\n`;\r\n\r\nconst HeaderButton = styled.div`\r\n    display: flex;\r\n    height: 25px;\r\n    width: 25px;\r\n    background-color: #292323;\r\n    border-radius: 20%;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst HeaderTitle = styled.div`\r\n    width: 97%;\r\n    user-select: none;\r\n`;\r\n\r\nconst HeaderText = styled.p`\r\n    color: #ffffff;\r\n    font-weight: 400;\r\n    margin: 0;\r\n    margin-left: 0.2em;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  width: 15px;\r\n  height: 15px;\r\n  background-color: #FB9632;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ConsoleHeader: React.FC<{ appInfo: ProcessInfo }> = ({ appInfo }) => {\r\n    var { dispatch } = useContext(AppContext);\r\n    return <WindowHeader className={\"handle\"}>\r\n        <HeaderButton>\r\n            <Circle onMouseDown={() => dispatch(Actions.Close(appInfo))} />\r\n        </HeaderButton>\r\n        <HeaderTitle>\r\n            <HeaderText>{appInfo.name}</HeaderText>\r\n        </HeaderTitle>\r\n    </WindowHeader>\r\n}\r\n\r\nconst Console: React.FC<{ appInfo: ProcessInfo, dimensions: { height: number | string, width: number | string } }> = ({ appInfo, children, dimensions }) => {\r\n    return <Draggable bounds='parent' handle={\".handle\"}>\r\n        <MainContainer height={dimensions.height} width={dimensions.width}>\r\n            <ConsoleHeader appInfo={appInfo} />\r\n            <WindowContainer>\r\n                {children}\r\n            </WindowContainer>\r\n        </MainContainer>\r\n    </Draggable>\r\n}\r\n\r\nexport default Console;","export default __webpack_public_path__ + \"static/media/profile.87bcfedc.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { NavLink } from '../types/types';\r\nimport linkConfig from '../links.json';\r\nimport profile from '../assets/profile.jpg';\r\n\r\nconst ColoredSpan = styled.span<{ color: string }>`\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst ConsoleLine = styled.p`\r\n    * {\r\n        margin-left: 0.5em;\r\n    }\r\n`;\r\n\r\nconst ScrollSpan = styled.span<{ color: string, charCount: number }>`\r\n    color: ${props => props.color};\r\n    display: inline-flex;\r\n    overflow: hidden;\r\n    padding-right: 0.1rem;\r\n    border-right: 0.2rem solid #959e97;\r\n    white-space: nowrap;\r\n\r\n    animation:\r\n        typewriter 3s steps(${props => props.charCount}, end),\r\n        blink-caret 1s step-end infinite;\r\n\r\n    @keyframes typewriter {\r\n        from { width: 0 }\r\n        to { width: ${props => props.charCount / 2.5}em } // This calculation is such a hack for now , whoops\r\n    }\r\n\r\n    @keyframes blink-caret {\r\n        from, to { border-color: transparent }\r\n        50% { border-color: #959e97; }\r\n    }\r\n`;\r\n\r\nconst FlexContainer = styled.div<{ direction: \"row\" | \"column\" }>`\r\n    display: flex;\r\n    flex-direction: ${props => props.direction};\r\n    flex-basis: 100%;\r\n`;\r\n\r\nconst ContentsContainer = styled.div`\r\n    flex: 3;\r\n    padding: 0.5rem 0.5rem;\r\n    border-left: 0.1rem dashed white;\r\n    border-top: 0.1rem dashed white;\r\n\r\n    p {\r\n        color: #A83A33\r\n    }\r\n`;\r\n\r\nconst SmallImage = styled.img`\r\n    width: 120px;\r\n    height: 100px;\r\n    border: 0.1rem solid white;\r\n    border-radius: 5px;\r\n    margin: 1rem;\r\n`;\r\n\r\nconst NavigationContainer = styled.div`\r\n    flex: 1;\r\n    flex-direction: column;\r\n    font-size: 12pt;\r\n\r\n    * {\r\n        margin-left: 0.5em;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: #ffffff;\r\n\r\n        :hover {\r\n            color: #76C7F5;\r\n            text-decoration: underline;\r\n        }\r\n\r\n        :hover:before {\r\n            content: \">\"\r\n        }\r\n\r\n        :hover:after{\r\n            content: \"<\";\r\n        }\r\n    }\r\n`;\r\n\r\nconst ConsoleText: React.FC<{ message: string }> = ({ message }) => {\r\n    return <ConsoleLine>\r\n        <ColoredSpan color={'#33A846'}>[user@home~]</ColoredSpan>\r\n        <ScrollSpan charCount={message.length} color={'#A83A33'}>{message}</ScrollSpan>\r\n    </ConsoleLine>\r\n}\r\n\r\nconst CvApp: React.FC = () => {\r\n    const navigationLinks: NavLink[] = linkConfig.links;\r\n    return <FlexContainer direction={\"column\"}>\r\n        <ConsoleText message={'Hello there stranger.......... My name is Ziggy'} />\r\n        <FlexContainer direction={\"row\"}>\r\n            <NavigationContainer>\r\n                <ColoredSpan color=\"white\">What would you like to know?</ColoredSpan>\r\n                <table id=\"nav\">\r\n                    {navigationLinks.map(item => <tr>\r\n                        <td>\r\n                            <a href={item.link}>{item.text}</a>\r\n                        </td>\r\n                    </tr>)}\r\n                </table>\r\n            </NavigationContainer>\r\n            <ContentsContainer>\r\n                <FlexContainer direction={\"row\"}>\r\n                    <SmallImage src={profile} />\r\n                    <FlexContainer direction={\"column\"}>\r\n                        <ColoredSpan color={\"white\"}>About Me</ColoredSpan>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            Maecenas sit amet est vitae tortor faucibus vehicula suscipit at neque.\r\n                            Nulla eget efficitur leo. Pellentesque ut neque in tortor tincidunt hendrerit ut ut ante.\r\n                            Suspendisse sodales lectus in sodales semper. Maecenas elit orci, condimentum vitae tellus ut, malesuada feugiat arcu. Nunc euismod tempor vehicula. Duis sem felis,\r\n                            accumsan non elementum vitae, ornare non dolor. Proin sit amet mauris metus. Quisque sit amet accumsan diam. Aliquam rutrum justo vel risus ultrices, v\r\n                            el malesuada magna pretium. Etiam eget dictum ante. Aliquam lacinia, enim in luctus congue, tellus leo laoreet lacus, in volutpat justo orci ut lorem.\r\n                            Proin pellentesque dignissim diam, a accumsan sem suscipit volutpat.\r\n                        </p>\r\n                        <p>(This section will be filled soon , I promise)</p>\r\n                        <p>♪┏(・o･)┛♪┗ ( ･o･) ┓♪</p>\r\n                    </FlexContainer>\r\n                </FlexContainer>\r\n            </ContentsContainer>\r\n        </FlexContainer>\r\n    </FlexContainer>\r\n}\r\n\r\nexport default CvApp;","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport { CvAppMain } from \"../types/appconstants\";\r\nimport Console from \"./Console\";\r\nimport CvApp from \"./CvApp\";\r\n\r\nexport const AppLauncher: React.FC = () => {\r\n    const { state } = useContext(AppContext);\r\n    const apps: JSX.Element[] = [];\r\n    for (var app in state.running) {\r\n        const info = state.running[app];\r\n        switch (info.appId) {\r\n            case CvAppMain.appId:\r\n                apps.push(\r\n                    <Console appInfo={CvAppMain} dimensions={{ height: '450px', width: '950px' }}>\r\n                        <CvApp />\r\n                    </Console>\r\n                )\r\n                break;\r\n        }\r\n    }\r\n    return <>{apps}</>;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Computer from './components/Computer';\r\nimport Monitor from './components/Monitor';\r\nimport { AppContextProvider } from './contexts/AppContext';\r\nimport { AppLauncher } from './components/AppLauncher';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContextProvider>\r\n      <Monitor>\r\n        <Computer dimensions={{ rows: 8, columns: 9 }}>\r\n          <AppLauncher />\r\n        </Computer >\r\n      </Monitor>\r\n    </AppContextProvider>\r\n  </React.StrictMode >,\r\n  document.getElementById('app')\r\n);\r\n"],"sourceRoot":""}