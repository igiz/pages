{"version":3,"sources":["types/actions.ts","components/Clock.tsx","assets/plug.svg","assets/computer.svg","contexts/AppContext.tsx","components/Toolbar.tsx","assets/duck.svg","assets/cursor.svg","assets/folder.svg","assets/computer-shiny.svg","assets/github.svg","assets/console.svg","types/appconstants.ts","components/Computer.tsx","components/Monitor.tsx","components/Console.tsx","components/Common.tsx","assets/profile.jpg","components/views/About.tsx","components/views/Education.tsx","components/views/ComingSoon.tsx","components/CvApp.tsx","components/Folder.tsx","components/AppLauncher.tsx","index.tsx"],"names":["AppActions","Time","styled","div","Clock","useState","Date","date","setDate","useEffect","watchTimer","setInterval","clearInterval","toLocaleTimeString","hour","minute","second","hour12","toUpperCase","Actions","processInfo","type","Close","payload","Open","Focus","AppContext","createContext","AppContextProvider","children","useReducer","state","action","newState","running","focused","appId","Object","keys","undefined","Error","open","dispatch","Provider","value","isOpen","Toolbar","props","height","Left","Right","AppBar","selected","SmallImage","img","DesktopToolbar","useContext","src","computer","values","map","item","onMouseDown","appLogo","name","plug","CvAppMain","console","OperatingSystem","Desktop","cursor","Wallpaper","LogoText","p","Logo","IconImage","IconText","Grid","columns","rows","Link","a","row","column","RotatingImage","Icon","iconText","iconImage","link","href","onClick","target","rel","SystemLogo","duck","title","alt","AppContainer","Computer","dimensions","folder","path","github","Frame","color","frameOutline","Pillar","Surface","Screen","borderColor","MonitorContainer","Stand","frameColor","Monitor","WindowContainer","WindowHeader","MainContainer","width","left","opacity","HeaderButton","HeaderTitle","HeaderText","Circle","ConsoleHeader","appInfo","onFocus","className","event","preventDefault","Console","forwardRef","ref","setOpacity","setLeft","setTimeout","bounds","handle","FlexContainer","direction","ColoredSpan","span","Container","About","profile","Table","table","Education","ComingSoon","ConsoleLine","ScrollSpan","charCount","ContentsContainer","NavigationContainer","ConsoleText","message","length","CvApp","navigationLinks","linkConfig","links","id","to","text","ErrorHeader","h1","Folder","AppLauncher","apps","setApps","appRefs","setAppRefs","current","style","zIndex","filter","forEach","refs","info","app","React","createRef","startsWith","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.573c21a5.chunk.js","sourcesContent":["import { ProcessInfo } from \"./types\"\r\n\r\nexport type Action<T> = {\r\n    type: string;\r\n    payload: T\r\n}\r\n\r\nexport enum AppActions {\r\n    Open = 'OpenApp',\r\n    Close = 'CloseApp',\r\n    Focus = 'Focus'\r\n}\r\n\r\nexport const Actions = {\r\n    Close: (processInfo: ProcessInfo): Action<ProcessInfo> => ({\r\n        type: AppActions.Close,\r\n        payload: processInfo\r\n    }),\r\n    Open: (processInfo: ProcessInfo): Action<ProcessInfo> => ({\r\n        type: AppActions.Open,\r\n        payload: processInfo\r\n    }),\r\n    Focus: (processInfo: ProcessInfo): Action<ProcessInfo> => ({\r\n        type: AppActions.Focus,\r\n        payload: processInfo\r\n    })\r\n}","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Time = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 19pt;\r\n    padding: 0 1rem 0 1rem;\r\n`;\r\n\r\nconst Clock: React.FC = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const watchTimer = setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000)\r\n        return () => clearInterval(watchTimer);\r\n    }, [])\r\n\r\n    return <Time>\r\n        {date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true }).toUpperCase()}\r\n    </Time >\r\n}\r\n\r\nexport default Clock;","export default __webpack_public_path__ + \"static/media/plug.ccebd3d4.svg\";","export default __webpack_public_path__ + \"static/media/computer.d8a6fb63.svg\";","import React, { createContext, useReducer, useState } from \"react\";\r\nimport { Action, AppActions } from \"../types/actions\";\r\nimport { Dictionary, IAppContext, IAppState } from \"../types/interfaces\";\r\nimport { ProcessInfo } from \"../types/types\";\r\n\r\nexport const AppContext = createContext<IAppContext>({} as IAppContext);\r\n\r\nconst useAppReducer = () => {\r\n    const init = (open: Dictionary<ProcessInfo>): IAppState => ({ running: open, focused: undefined });\r\n    const reducer = (state: IAppState, action: Action<ProcessInfo>) => {\r\n        const newState: IAppState = { running: { ...state.running }, focused: state.focused }\r\n        const appId = action.payload.appId;\r\n        switch (action.type) {\r\n            case AppActions.Open:\r\n                newState.running[appId] = action.payload;\r\n                newState.focused = appId;\r\n                break;\r\n            case AppActions.Close:\r\n                delete newState.running[action.payload.appId];\r\n                newState.focused = newState.running[Object.keys(newState.running)[0]]?.appId ?? undefined;\r\n                break;\r\n            case AppActions.Focus:\r\n                newState.focused = appId;\r\n                break;\r\n            default:\r\n                throw new Error();\r\n        }\r\n\r\n        return newState;\r\n    }\r\n    return useReducer(reducer, {} as Dictionary<ProcessInfo>, init);\r\n}\r\n\r\nexport const AppContextProvider: React.FC = ({ children }) => {\r\n    const [state, dispatch] = useAppReducer();\r\n\r\n    return <AppContext.Provider value={{\r\n        isOpen: (appId: string) => state.running[appId] !== undefined,\r\n        state,\r\n        dispatch,\r\n    }}>\r\n        {children}\r\n    </AppContext.Provider>\r\n}","import styled from 'styled-components';\r\nimport React, { useContext } from 'react';\r\nimport Clock from './Clock';\r\nimport plug from '../assets/plug.svg'\r\nimport computer from '../assets/computer.svg';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport { Actions } from '../types/actions';\r\n\r\nconst Toolbar = styled.div<{ height: string }>`\r\n    display: flex;\r\n    flex-direction: row;\r\n    height: ${props => props.height};\r\n    width: 100%;\r\n    background-color: #F5F0F0;\r\n    box-shadow: inset 0 0 3px #111010b0;\r\n`;\r\n\r\nconst Left = styled.div`\r\n    display: flex;\r\n    width: 50%;\r\n    div {\r\n        border-left: 1px solid black;\r\n    }\r\n`;\r\n\r\nconst Right = styled.div`\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    width: 50%;\r\n`;\r\n\r\nconst AppBar = styled.div<{ selected: boolean }>`\r\n    cursor: pointer;\r\n    user-select: none;\r\n    width: 14em;\r\n    box-shadow: 0px 2px 5px 0px #aaa8a8 inset;\r\n    ${props => props.selected ? \"background: #9693933a\" : \"\"};\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 0.5em 0 0.5em;\r\n    p {\r\n        width: auto;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n    }\r\n`;\r\n\r\nconst SmallImage = styled.img`\r\n    width: 34px;\r\n    height: 100%;\r\n    padding: 0 0.5rem 0 0.5rem;\r\n`;\r\n\r\nconst DesktopToolbar: React.FC<{ height: string }> = ({ height }) => {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const focused = state.focused;\r\n\r\n    return <Toolbar height={height}>\r\n        <Left>\r\n            <SmallImage src={computer} />\r\n            {\r\n                Object.values(state.running).map(item =>\r\n                    <AppBar onMouseDown={() => dispatch(Actions.Focus(item))} selected={item.appId === focused}>\r\n                        <SmallImage src={item.appLogo} />\r\n                        <p>{item.name}</p>\r\n                    </AppBar>\r\n                )\r\n            }\r\n        </Left>\r\n        <Right>\r\n            <SmallImage src={plug} />\r\n            <Clock />\r\n        </Right>\r\n    </Toolbar>\r\n}\r\n\r\nexport default DesktopToolbar;","export default __webpack_public_path__ + \"static/media/duck.e4fa0349.svg\";","export default __webpack_public_path__ + \"static/media/cursor.25fe7b37.svg\";","export default __webpack_public_path__ + \"static/media/folder.9d5e3359.svg\";","export default __webpack_public_path__ + \"static/media/computer-shiny.5aa929f3.svg\";","export default __webpack_public_path__ + \"static/media/github.04be58c1.svg\";","export default __webpack_public_path__ + \"static/media/console.d7e6d62d.svg\";","import { ProcessInfo } from \"./types\";\r\n\r\nimport console from \"../assets/console.svg\";\r\nimport folder from \"../assets/folder.svg\";\r\n\r\nexport const CvAppMain: ProcessInfo = { appId: \"cvApp\", name: \"CvApp - Zygimantas Raugas\", appLogo: console }\r\nexport const Folder = (path: string): ProcessInfo => ({ appId: `Folder:${path}`, name: path, appLogo: folder })","import styled from 'styled-components';\r\nimport React, { useContext } from 'react';\r\n\r\n/** Third party imports above**/\r\nimport DesktopToolbar from './Toolbar';\r\nimport duck from '../assets/duck.svg';\r\nimport cursor from '../assets/cursor.svg';\r\nimport folder from '../assets/folder.svg';\r\nimport computer from '../assets/computer-shiny.svg';\r\nimport github from '../assets/github.svg';\r\nimport console from '../assets/console.svg';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport { Actions } from '../types/actions';\r\nimport { CvAppMain, Folder } from '../types/appconstants';\r\n\r\nconst OperatingSystem = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    width: 1280px;\r\n    height: 720px;\r\n`;\r\n\r\nconst Desktop = styled.div`\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #111010;\r\n    cursor: url(${cursor}) , auto;\r\n`;\r\n\r\nconst Wallpaper = styled.div<{ height: string }>`\r\n    display: flex;\r\n    position: relative;\r\n    height: ${props => props.height};\r\n    width: 100%;\r\n`;\r\n\r\nconst LogoText = styled.p`\r\n    align-self: flex-end;\r\n    color: #8D8080;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    font-size: 22pt;\r\n    display: flex;\r\n    position: absolute;\r\n    bottom: 0;\r\n    padding-bottom: 2%;\r\n    padding-left: 0%;\r\n`;\r\n\r\nconst IconImage = styled.img`\r\n    width: 70%;\r\n    height: 70%;\r\n`;\r\n\r\nconst IconText = styled.p`\r\n    color: white;\r\n    margin: 0;\r\n`;\r\n\r\nconst Grid = styled.div<{ rows: number, columns: number }>`\r\n    position: absolute;\r\n    display: grid;\r\n    text-align: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-content: center;\r\n    grid-template-columns: repeat(${props => props.columns}, ${props => (100 - (props.columns * 2)) / props.columns}%);\r\n    grid-template-rows: repeat(${props => props.rows}, ${props => (100 - (props.rows * 2)) / props.rows}%);\r\n    grid-auto-flow: column;\r\n    grid-row-gap: 2%;\r\n    grid-column-gap: 2%;\r\n`;\r\n\r\nconst Link = styled.a <{ row?: number, column?: number }> `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: auto;\r\n    height: auto;\r\n    ${props => props.row ? `grid-row: ${props.row};` : ''}\r\n    ${props => props.column ? `grid-column: ${props.column};` : ''}\r\n    text-align: center;\r\n    user-select: none;\r\n\r\n    :hover {\r\n        border: 1px dashed #3d3d3d;\r\n        border-radius: 0.25em;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst RotatingImage = styled.img`\r\n    filter: drop-shadow(5px 2.5px 1px);\r\n    animation: flip 10s steps(360) infinite;\r\n    @keyframes flip {\r\n        from {\r\n            transform: rotate3d(0, 1, 0, 0deg);\r\n        }\r\n        to {\r\n            transform: rotate3d(0, 1, 0, -360deg);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Icon: React.FC<{ iconText: string, iconImage: string, link?: string, action?: () => void, column?: number, row?: number }> = ({ iconText, iconImage, row, column, link, action }) => {\r\n    return <Link href={link} onClick={action} target='_blank' rel='noreferrer' row={row} column={column}>\r\n        <IconImage src={iconImage} />\r\n        <IconText>{iconText}</IconText>\r\n    </Link>\r\n}\r\n\r\nconst SystemLogo: React.FC = () => {\r\n    return <Logo>\r\n        <RotatingImage src={duck} title='Quack' alt='Mr Duck' />\r\n        <LogoText>QUACKOS 0.3</LogoText>\r\n    </Logo>\r\n}\r\n\r\nconst AppContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: list-item;\r\n`;\r\n\r\nconst Computer: React.FC<{ dimensions: { rows: number, columns: number } }> = ({ children, dimensions }) => {\r\n    const { dispatch } = useContext(AppContext);\r\n\r\n    return (\r\n        <OperatingSystem>\r\n            <Desktop>\r\n                <DesktopToolbar height=\"6%\" />\r\n                <Wallpaper height=\"94%\">\r\n                    <SystemLogo />\r\n                    <Grid rows={dimensions.rows} columns={dimensions.columns}>\r\n                        <Icon iconText=\"Computer\" iconImage={computer} />\r\n                        <Icon iconText=\"Super Secret\" iconImage={folder} action={() => dispatch(Actions.Open(Folder(\"Super Secret\")))} />\r\n                        <Icon iconText=\"CV App\" iconImage={console} action={() => dispatch(Actions.Open(CvAppMain))} />\r\n                        {/** Push to the very end of the grid**/}\r\n                        <Icon iconText=\"Source Code\" iconImage={github} link={'https://github.com/igiz/pages/tree/master'} row={dimensions.rows} column={dimensions.columns} />\r\n                    </Grid>\r\n                    <AppContainer>\r\n                        {children}\r\n                    </AppContainer>\r\n                </Wallpaper>\r\n            </Desktop >\r\n        </OperatingSystem>\r\n    )\r\n}\r\n\r\nexport default Computer;\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Frame = styled.div<{ color: string, frameOutline: string }>`\r\n    align-content: center;\r\n    border-radius: 20px;\r\n    background-color: ${props => props.color};\r\n    border: 20px solid ${props => props.color};\r\n    box-shadow: 3px 4px 3px 3px ${props => props.frameOutline};\r\n    width: 1286px;\r\n    height: 726px;\r\n`;\r\n\r\nconst Pillar = styled.div<{ color: string, frameOutline: string }>`\r\n    height: 80px;\r\n    width: 150px;\r\n    background-color: ${props => props.color};\r\n    box-shadow: 4px 5px 3px #000000;\r\n`;\r\n\r\nconst Surface = styled.div<{ frameOutline: string }>`\r\n    height: 35px;\r\n    width: 800px;\r\n    background-color: ${props => props.color};\r\n    border-radius: 5px;\r\n    box-shadow: 4px 5px 3px #000000;\r\n`;\r\n\r\nconst Screen = styled.div<{ borderColor: string }>`\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n    border-radius: 5px;\r\n    border: 3px solid ${props => props.borderColor};\r\n`;\r\n\r\nconst MonitorContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Stand: React.FC<{ frameColor: string, frameOutline: string }> = ({ frameColor, frameOutline }) => {\r\n    return <>\r\n        <Pillar color={frameColor} frameOutline={frameOutline} />\r\n        <Surface color={frameColor} frameOutline={frameOutline} />\r\n    </>\r\n}\r\n\r\nconst Monitor: React.FC = ({ children }) => {\r\n\r\n    const frameOutline = '#000000';\r\n    const frameColor = '#545564';\r\n\r\n    return <MonitorContainer>\r\n        <Frame color={frameColor} frameOutline={frameOutline}>\r\n            <Screen borderColor={frameOutline}>\r\n                {children}\r\n            </Screen>\r\n        </Frame>\r\n        <Stand frameColor={'#000000'} frameOutline={'#ffffff'} />\r\n    </MonitorContainer>\r\n\r\n}\r\n\r\nexport default Monitor;","import React, { forwardRef, useContext, useEffect, useState } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport { Actions } from \"../types/actions\";\r\nimport { ProcessInfo } from \"../types/types\";\r\n\r\nexport interface IAppContainerProps {\r\n    appInfo: ProcessInfo,\r\n    dimensions: { height: number | string, width: number | string },\r\n    onFocus: () => void;\r\n}\r\n\r\nconst WindowContainer = styled.div<{ borderColor: string }>`\r\n    display: flex;\r\n    max-height: 95%;\r\n    min-height: 95%;\r\n    flex-direction: row;\r\n    border-bottom: 5px solid ${props => props.borderColor};\r\n    border-left: 5px solid ${props => props.borderColor};\r\n    border-right: 5px solid ${props => props.borderColor};\r\n    overflow-wrap: break-word;\r\n    overflow-y: scroll;\r\n    background-color: #292323;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 0.4rem;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background: #363232;\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #575353;\r\n    }\r\n`;\r\n\r\nconst WindowHeader = styled.div<{ borderColor: string }>`\r\n    display: flex;\r\n    height: auto;\r\n    flex-direction: row-reverse;\r\n    background-color: ${props => props.borderColor};\r\n    padding-right: 5px;\r\n    padding-top: 3px;\r\n    padding-bottom: 3px;\r\n`;\r\n\r\nconst MainContainer = styled.div<{ height: number | string, width: number | string, opacity: number, left: string }>`\r\n    width: ${props => props.width};\r\n    height: ${props => props.height};\r\n    position: absolute;\r\n    left: ${props => props.left};\r\n    transition: opacity 0.5s, left 1s;\r\n    opacity: ${props => props.opacity};\r\n    top: 10%;\r\n`;\r\n\r\nconst HeaderButton = styled.div`\r\n    display: flex;\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    background-color: #292323;\r\n    border-radius: 0.3rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: background-color 1s;\r\n    :hover {\r\n        background-color: #000000;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst HeaderTitle = styled.div`\r\n    width: 100%;\r\n    user-select: none;\r\n`;\r\n\r\nconst HeaderText = styled.p`\r\n    color: #ffffff;\r\n    font-weight: 400;\r\n    margin: 0;\r\n    margin-left: 0.2em;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  width: 0.8rem;\r\n  height: 0.8rem;\r\n  background-color: #FB9632;\r\n  border-radius: 50%;\r\n  transition: background-color 0.2s , border-radius 0.2s, height 0.2s;\r\n  :hover {\r\n        background-color: #ff0000;\r\n        border-radius: 0;\r\n        height: 7px;\r\n        cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ConsoleHeader: React.FC<{ appInfo: ProcessInfo, borderColor: string, onFocus: () => void }> = ({ appInfo, borderColor, onFocus }) => {\r\n    var { dispatch } = useContext(AppContext);\r\n\r\n    return <WindowHeader className={\"handle\"} borderColor={borderColor}>\r\n        <HeaderButton onMouseDown={(event) => {\r\n            dispatch(Actions.Close(appInfo));\r\n            event.preventDefault();\r\n        }}>\r\n            <Circle />\r\n        </HeaderButton>\r\n        <HeaderTitle>\r\n            <HeaderText onMouseDown={onFocus}>{appInfo.name}</HeaderText>\r\n        </HeaderTitle>\r\n    </WindowHeader>\r\n}\r\n\r\nconst Console = forwardRef<HTMLDivElement, React.PropsWithChildren<IAppContainerProps>>(({ appInfo, dimensions, onFocus, children }, ref) => {\r\n    const { state } = useContext(AppContext);\r\n    const [opacity, setOpacity] = useState<number>(0);\r\n    const [left, setLeft] = useState<string>(\"0%\");\r\n    const borderColor = state.focused === appInfo.appId ? \"#36ADAD\" : \"#235f5f\";\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setOpacity(1);\r\n            setLeft(\"15%\");\r\n        }, 50)\r\n    }, [])\r\n\r\n    return <Draggable bounds='parent' handle={\".handle\"}>\r\n        <MainContainer height={dimensions.height} width={dimensions.width} opacity={opacity} left={left} ref={ref}>\r\n            <ConsoleHeader appInfo={appInfo} onFocus={onFocus} borderColor={borderColor} />\r\n            <WindowContainer onMouseDown={onFocus} borderColor={borderColor}>\r\n                {children}\r\n            </WindowContainer>\r\n        </MainContainer>\r\n    </Draggable >\r\n});\r\n\r\nexport default Console;","import styled from \"styled-components\";\r\n\r\nexport const SmallImage = styled.img`\r\n    width: 120px;\r\n    height: 100px;\r\n    border: 0.1rem solid white;\r\n    border-radius: 5px;\r\n    margin: 1rem;\r\n`;\r\n\r\nexport const FlexContainer = styled.div<{ direction: \"row\" | \"column\" }>`\r\n    display: flex;\r\n    flex-direction: ${props => props.direction};\r\n    flex-basis: 100%;\r\n`;\r\n\r\nexport const ColoredSpan = styled.span<{ color: string }>`\r\n    color: ${props => props.color};\r\n`;","export default __webpack_public_path__ + \"static/media/profile.87bcfedc.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { ColoredSpan, FlexContainer, SmallImage } from '../Common';\r\nimport profile from '../../assets/profile.jpg';\r\n\r\nconst Container = styled(FlexContainer)`\r\n    img {\r\n        margin-top: 40px;\r\n    }\r\n`\r\n\r\nconst About: React.FC = () => {\r\n    return <Container direction={\"row\"}>\r\n        <SmallImage src={profile} />\r\n        <FlexContainer direction={\"column\"}>\r\n            <ColoredSpan color={\"white\"}>About Me</ColoredSpan>\r\n            <p>Software Engineer based in London with over 8 years’ experience in the software development industry.\r\n                Over this period, I have worked in various teams and gathered knowledge in various technologies to implement and maintain applications for financial reporting, budgeting, analytics and BIM data on both web and desktop applications.\r\n                I enjoy taking on technical tasks of any complexity. I am passionate and always seek to learn new technologies and tools to widen my skill set.\r\n                I also have extensive experience working with customers and troubleshooting technical issues live on calls.\r\n            </p>\r\n            <p>♪┏(・o･)┛♪┗ ( ･o･) ┓♪</p>\r\n        </FlexContainer>\r\n    </Container>\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport styled\r\n    from 'styled-components';\r\nimport { FlexContainer } from '../Common';\r\n\r\nconst Table = styled.table`\r\n    width: 100%;\r\n    text-align: left;\r\n    border: solid black 2px;\r\n    border-radius:6px;\r\n\r\n\r\n    th {\r\n        background-color: white;\r\n        text-align: center;\r\n    }\r\n    tr {\r\n        p {\r\n            padding-left: 10px;\r\n        }\r\n        text-align: left;\r\n        td {\r\n            padding-left: 10px;\r\n            color: white;\r\n            :nth-child(1) {\r\n                width: 70%;\r\n            }\r\n            :nth-child(2) {\r\n                text-align: center;\r\n                vertical-align: top;\r\n                width: 30%;\r\n            }\r\n\r\n            span {\r\n                color: #ffffff5e;\r\n                * {\r\n                    padding-left: 10px;\r\n                }\r\n            }\r\n        }\r\n        background-color: #000000;\r\n    }\r\n`\r\n\r\n\r\nconst Education: React.FC = () => {\r\n    return <FlexContainer direction={\"column\"}>\r\n        <Table>\r\n            <tr>\r\n                <th>What</th>\r\n                <th>When</th>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Bachelor in Business Computing, 1st\r\n                    Westfield Trust Prize\r\n                    <p>Queen Mary University of London</p>\r\n                    <p>\r\n                        <span>\r\n                            Extracurricular Activities:\r\n                            <li>PASS Mentor</li>\r\n                            <li>Teaching Assistant</li>\r\n                        </span>\r\n                    </p>\r\n                </td>\r\n                <td>\r\n                    2011 – 2013\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    A Levels in Geography, ICT &amp; Business\r\n                    <p>Bishop Douglass RC School</p>\r\n                </td>\r\n                <td>2009 – 2011</td>\r\n            </tr>\r\n        </Table>\r\n    </FlexContainer>\r\n}\r\n\r\nexport default Education;","import React from \"react\";\r\n\r\nconst ComingSoon: React.FC = () => {\r\n    return <p>\r\n        (COMING SOONG)\r\n    </p>\r\n}\r\n\r\nexport default ComingSoon;","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    BrowserRouter\r\n} from 'react-router-dom';\r\n\r\nimport { NavLink } from '../types/types';\r\nimport linkConfig from '../links.json';\r\nimport { ColoredSpan, FlexContainer } from './Common';\r\nimport About from './views/About';\r\nimport Education from './views/Education';\r\nimport ComingSoon from './views/ComingSoon';\r\nimport { AppContext } from '../contexts/AppContext';\r\n\r\nconst ConsoleLine = styled.p`\r\n    * {\r\n        margin-left: 0.5em;\r\n    }\r\n`;\r\n\r\nconst ScrollSpan = styled.span<{ color: string, charCount: number }>`\r\n    color: ${props => props.color};\r\n    display: inline-flex;\r\n    overflow: hidden;\r\n    padding-right: 0.1rem;\r\n    border-right: 0.2rem solid #959e97;\r\n    white-space: nowrap;\r\n\r\n    animation:\r\n        typewriter 3s steps(${props => props.charCount}, end),\r\n        blink-caret 1s step-end infinite;\r\n\r\n    @keyframes typewriter {\r\n        from { width: 0 }\r\n        to { width: ${props => props.charCount / 2.5}em } // This calculation is such a hack for now , whoops\r\n    }\r\n\r\n    @keyframes blink-caret {\r\n        from, to { border-color: transparent }\r\n        50% { border-color: #959e97; }\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst ContentsContainer = styled.div`\r\n    flex: 3;\r\n    padding: 0.5rem 0.5rem;\r\n    border-left: 0.1rem dashed white;\r\n    border-top: 0.1rem dashed white;\r\n\r\n    p {\r\n        color: #A83A33\r\n    }\r\n`;\r\n\r\nconst NavigationContainer = styled.div`\r\n    position: sticky;\r\n    top: 0;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    font-size: 12pt;\r\n\r\n    * {\r\n        margin-left: 0.5em;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: #ffffff;\r\n\r\n        :hover {\r\n            color: #76C7F5;\r\n            text-decoration: underline;\r\n        }\r\n\r\n        :hover:before {\r\n            content: \">\"\r\n        }\r\n\r\n        :hover:after{\r\n            content: \"<\";\r\n        }\r\n    }\r\n`;\r\n\r\nconst ConsoleText: React.FC<{ message: string }> = ({ message }) => {\r\n    return <ConsoleLine>\r\n        <ColoredSpan color={'#33A846'}>[user@home~]</ColoredSpan>\r\n        <ScrollSpan charCount={message.length} color={'#A83A33'}>{message}</ScrollSpan>\r\n    </ConsoleLine>\r\n}\r\n\r\nconst CvApp: React.FC = () => {\r\n    const navigationLinks: NavLink[] = linkConfig.links;\r\n    return <BrowserRouter>\r\n        <FlexContainer direction={\"column\"}>\r\n            <ConsoleText message={'Hello there stranger.......... My name is Ziggy'} />\r\n            <FlexContainer direction={\"row\"}>\r\n                <NavigationContainer>\r\n                    <ColoredSpan color=\"white\">What would you like to know?</ColoredSpan>\r\n                    <table id=\"nav\">\r\n                        {navigationLinks.map(item => <tr>\r\n                            <td>\r\n                                <Link to={item.link}>{item.text}</Link>\r\n                            </td>\r\n                        </tr>)}\r\n                    </table>\r\n                </NavigationContainer>\r\n                <ContentsContainer>\r\n                    <FlexContainer direction={\"row\"}>\r\n\r\n                        <Switch>\r\n                            <Route path=\"/about\">\r\n                                <About />\r\n                            </Route>\r\n                            <Route path=\"/education\">\r\n                                <Education />\r\n                            </Route>\r\n                            <Route path={[\"/experience\", \"/tech\", \"/links\", \"/contact\"]}>\r\n                                <ComingSoon />\r\n                            </Route>\r\n                            <Route path=\"/\">\r\n                                <About />\r\n                            </Route>\r\n                        </Switch>\r\n                    </FlexContainer>\r\n                </ContentsContainer>\r\n            </FlexContainer>\r\n        </FlexContainer>\r\n    </BrowserRouter >\r\n}\r\n\r\nexport default CvApp;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst ErrorHeader = styled.h1`\r\n    color: red;\r\n`;\r\n\r\nexport const Folder: React.FC = ({ children }) => {\r\n    return <Container>\r\n        <ErrorHeader>ACCESS DENIED: CHEEKY YOU!</ErrorHeader>\r\n    </Container>\r\n}\r\n\r\nexport default Folder;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport { Actions } from \"../types/actions\";\r\nimport { CvAppMain } from \"../types/appconstants\";\r\nimport { Dictionary } from \"../types/interfaces\";\r\nimport Console from \"./Console\";\r\nimport CvApp from \"./CvApp\";\r\nimport Folder from \"./Folder\";\r\n\r\nexport const AppLauncher: React.FC = () => {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const [apps, setApps] = useState<Dictionary<JSX.Element>>({})\r\n    const [appRefs, setAppRefs] = useState<Dictionary<React.RefObject<HTMLDivElement>>>({});\r\n    const focused = state.focused;\r\n\r\n    useEffect(() => {\r\n        if (focused !== undefined && appRefs[focused]) {\r\n            const ref = appRefs[focused];\r\n            if (ref.current) {\r\n                ref.current.style.zIndex = \"1\";\r\n            }\r\n        }\r\n\r\n        Object.keys(appRefs)\r\n            .filter(item => item !== focused)\r\n            .forEach(item => {\r\n                const ref = appRefs[item];\r\n                if (ref.current) {\r\n                    ref.current.style.zIndex = \"0\"\r\n                }\r\n            })\r\n    }, [focused, appRefs])\r\n\r\n    useEffect(() => {\r\n        const running: Record<string, JSX.Element> = {}\r\n        const refs: Record<string, React.RefObject<HTMLDivElement>> = {};\r\n        for (var app in state.running) {\r\n            const info = state.running[app];\r\n            const ref = React.createRef<HTMLDivElement>();\r\n            if (info.appId === CvAppMain.appId) {\r\n                running[info.appId] =\r\n                    <Console appInfo={info} dimensions={{ height: '450px', width: '950px' }} onFocus={() => dispatch(Actions.Focus(info))} ref={ref}>\r\n                        <CvApp />\r\n                    </Console>\r\n            } else if (info.appId.startsWith(\"Folder:\")) {\r\n                running[info.appId] =\r\n                    <Console appInfo={info} dimensions={{ height: '135px', width: '500px' }} onFocus={() => dispatch(Actions.Focus(info))} ref={ref}>\r\n                        <Folder />\r\n                    </Console>\r\n            }\r\n            refs[info.appId] = ref;\r\n        }\r\n        setAppRefs(refs);\r\n        setApps(running)\r\n    }, [state, dispatch])\r\n\r\n    return <>\r\n        {Object.keys(apps).map(item => apps[item])}\r\n    </>;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Computer from './components/Computer';\r\nimport Monitor from './components/Monitor';\r\nimport { AppContextProvider } from './contexts/AppContext';\r\nimport { AppLauncher } from './components/AppLauncher';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContextProvider>\r\n      <Monitor>\r\n        <Computer dimensions={{ rows: 8, columns: 9 }}>\r\n          <AppLauncher />\r\n        </Computer >\r\n      </Monitor>\r\n    </AppContextProvider>\r\n  </React.StrictMode >,\r\n  document.getElementById('app')\r\n);\r\n"],"sourceRoot":""}